name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main  # 默认分支

# 设置 GITHUB_TOKEN 的权限
permissions:
  contents: read
  pages: write
  id-token: write

# 允许一个并发部署
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Intlayer
        run: |
          # 创建必要的目录
          mkdir -p .intlayer/dictionary
          mkdir -p .intlayer/main
          mkdir -p .intlayer/cache
          mkdir -p .intlayer/config
          mkdir -p .intlayer/types
          mkdir -p src/locales
          
          # 创建基础翻译文件
          cat > src/locales/app.content.ts << 'EOL'
          export default {
            nav: {
              home: {
                "zh-Hans": "首页",
                "en": "Home",
                "ja": "ホーム"
              },
              articles: {
                "zh-Hans": "文章",
                "en": "Articles",
                "ja": "記事"
              }
            },
            articles: {
              loading: {
                "zh-Hans": "加载中...",
                "en": "Loading...",
                "ja": "読み込み中..."
              },
              noResults: {
                title: {
                  "zh-Hans": "文章未找到",
                  "en": "Article Not Found",
                  "ja": "記事が見つかりません"
                },
                description: {
                  "zh-Hans": "请求的文章不存在",
                  "en": "The requested article does not exist",
                  "ja": "リクエストされた記事は存在しません"
                }
              }
            }
          };
          EOL
          
          # 创建虚拟模块
          cat > src/utils/intlayerVirtual.ts << 'EOL'
          import translations from '../locales/app.content';
          
          export const appDictionary = {
            key: "app",
            content: translations
          };
          
          export default appDictionary;
          EOL
          
          # 修改组件中的导入
          sed -i 's|import { useIntlayer } from '\''react-intlayer'\''|import { appDictionary } from '\''../utils/intlayerVirtual'\''\nimport { useIntlayer } from '\''react-intlayer'\''|g' src/components/ArticleDetail.tsx
          
          echo "Intlayer setup completed"
          
          # 显示创建的文件
          echo "Created files structure:"
          ls -R .intlayer/
          ls -R src/locales/
          
          echo "Content of app.content.ts:"
          cat src/locales/app.content.ts
          
          echo "Content of intlayerVirtual.ts:"
          cat src/utils/intlayerVirtual.ts

      - name: Build project
        run: |
          echo "Starting project build..."
          NODE_ENV=production VITE_APP_ENV=production npm run build
          echo "Checking build output:"
          ls -la dist/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 